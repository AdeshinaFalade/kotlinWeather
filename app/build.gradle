plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

android {
    namespace 'com.example.weatherapp'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.weatherapp"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {

        release {
            storeFile file("${rootDir}/weatherapp.keystore")
            storePassword 'Shina123.'
            keyAlias 'weatherkey'
            keyPassword keystorePassword
        }
    }

    buildTypes {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        def CONFIG = { k -> "\"${properties .get(k)}\"" }

        release {
            minifyEnabled true
            buildConfigField "String", "HOST", "\"https://api.openweathermap.org/\""
            buildConfigField "String", "APIKEY", CONFIG("APIKEY")
            buildConfigField "String", "IMAGEHOST", CONFIG("IMAGEHOST")
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            minifyEnabled false
            buildConfigField "String", "HOST", CONFIG("HOST")
            buildConfigField "String", "APIKEY", CONFIG("APIKEY")
            buildConfigField "String", "IMAGEHOST", CONFIG("IMAGEHOST")
        }

        dev {
            minifyEnabled false
            buildConfigField "String", "HOST", CONFIG("HOST")
            buildConfigField "String", "APIKEY", CONFIG("APIKEY")
            buildConfigField "String", "IMAGEHOST", CONFIG("IMAGEHOST")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui:1.4.0'
    implementation 'androidx.compose.ui:ui-util:1.4.0'
    implementation "androidx.compose.material3:material3:1.1.1"
    implementation "androidx.compose.material3:material3-window-size-class:1.1.1"
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    implementation 'io.coil-kt:coil-compose:2.3.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'


// Hilt
    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-compiler:2.44"

    implementation 'com.github.bumptech.glide:compose:1.0.0-alpha.1'
    // netpos
//    implementation 'org.bitbucket.netplustechteam:contactless_sdk:1.0.8'

}

kapt {
    correctErrorTypes true
}